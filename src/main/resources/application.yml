#server:
#  port: 8761

app:
  id: springboot-test	# Apollo注册项目时的AppId，应用ID，项目的唯一标识
apollo:
  meta: http://localhost:8080		# apollo服务器地址
  cacheDir: C:/opt/cache/some-cache-dir		# 为了防止配置中心无法连接等问题，Apollo 会自动将配置本地缓存一份，配置缓存的路径
  bootstrap:
    enabled: true	# 注入默认application namespace的配置示例
    eagerLoad:
      enabled: true		# 将 Apollo 加载提到初始化日志系统之前，如果设置为 false，那么将打印出 Apollo 的日志信息，但是由于打印 Apollo 日志信息需要日志先启动，启动后无法对日志配置进行修改，所以 Apollo 不能管理应用的日志配置，如果设置为 true，那么 Apollo 可以管理日志的配置，但是不能打印出 Apollo 的日志信息
    namespaces: application,application.yml		# 如果配置文件没有配置apollo.bootstrap.namespaces时，系统默认namespaces为application。配置的话，就不走默认的，按照namespaces中指定得一个或者多个
  cluster: testing1		# 指定使用某个集群下的配置
  # autoUpdateInjectedSpringProperties: false		# 关闭placeholder在运行时自动更新功能【Spring应用通常会使用Placeholder来注入配置，使用的格式形如${someKey:someDefaultValue}，如${timeout:100}。冒号前面的是key，冒号后面的是默认值。建议在实际使用时尽量给出默认值，以免由于key没有定义导致运行时错误。】如果想关闭 placeholder 在运行时自动更新功能，可以设置为 false。